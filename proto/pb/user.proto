syntax = "proto3";

package pb;

option go_package = "./pb";


service UserService{

  rpc Register(RegisterReq) returns (RegisterRes);

  rpc Login(LoginReq) returns (LoginRes);

  rpc Info(InfoReq) returns (InfoRes);

  rpc Follow(FollowReq) returns (FollowRes);

  rpc FollowList(FollowListReq) returns (FollowListRes);

  rpc FollowerList(FollowerListReq) returns (FollowerListRes);

}

message RegisterReq {
  string username = 1; //注册用户名，最长32个字符
  string password = 2; //密码，最长32个字符
}

message RegisterRes {
  int32 status_code = 1;//状态码，0-成功，其他值-失败11
  string status_msg = 2;//返回状态描述
  int64 user_id = 3;//用户id
  string token = 4; //用户鉴权token
}


message LoginReq {
  string username = 1;//登录用户名
  string password = 2;//登录密码
}
message LoginRes {
  int32 status_code = 1;//状态码，0-成功，其他值-失败
  string status_msg = 2;//返回状态描述
  int64 user_id = 3;//用户id
  string token = 4;//用户鉴权token
}


message InfoReq {
  int64 user_id = 1;//用户id
  string token = 2;//用户鉴权token
}

message InfoRes {
  int32 status_code = 1; //状态码，6-成功，其他值-失败
  string status_msg = 2; //返回状态描述
  User user = 3; //用户信息
}

message User {
  int64 id = 1;//用户
  string name = 2; //用户名称
  int64 follow_count = 3; //关注总数
  int64 follower_count = 4; //粉丝总数
  bool is_follow = 5; // true-已关注，false-未关注
}


message FollowReq{
  int64 user_id = 1;//用户id
  string token = 2;//用户鉴权token
  int64 to_user_id = 3;//对方用户id
  int32 action_type = 4; // 1-关注，2-取消关注
}
message FollowRes {
  int32 status_code = 1;//状态码，0-成功，其他值-失败
  string status_msg = 2;//返回状态描述
}

message FollowListReq {
  int64 user_id = 1; //用户id
  string token = 2;//用户鉴权token
}
message FollowListRes {
    int32 status_code = 1;//状态码，0-成功，其他值-失败
    string status_msg = 2;//返回状态描述
    repeated User user_list = 3;//用户信息列表
}

message FollowerListReq {
  int64 user_id = 1;//用户id
  string token = 2;//用户鉴权token
}

message FollowerListRes {
  int32 status_code = 1;//状态码，0-成功，其他值-失败
  string status_msg = 2;//返回状态描述
  repeated User user_list = 3;//用户列表
}





